evaluationDependsOn(":common")

fabricApi {
    configureDataGeneration {
        client = true
    }
}

loom {
    runs {
        client {
            // Only run murf-tweaks itself
            ideConfigGenerated true
            runDir "run"
        }
    }

    jar {
        // Include common classes/resources but exclude its fabric.mod.json
        from(project(":common").sourceSets.main.output) {
            exclude("fabric.mod.json")
        }
        from(project(":common").sourceSets.client.output) {
            exclude("fabric.mod.json")
        }
    }
}

sourceSets {
    main {
        compileClasspath += project(":common").sourceSets.main.output
        runtimeClasspath += project(":common").sourceSets.main.output
    }
    client {
        compileClasspath += project(":common").sourceSets.main.output
        runtimeClasspath += project(":common").sourceSets.main.output
        compileClasspath += project(":common").sourceSets.client.output
        runtimeClasspath += project(":common").sourceSets.client.output
    }
}

configurations {
    namedElements {
        canBeConsumed = true
        canBeResolved = false
        extendsFrom configurations.implementation
    }
    clientNamedElements {
        canBeConsumed = true
        canBeResolved = false
        extendsFrom configurations.implementation
    }
}

artifacts {
    namedElements jar
    clientNamedElements jar
}

dependencies {
    implementation project(path: ":common", configuration: "namedElements")
    implementation project(path: ":common", configuration: "clientNamedElements")
}